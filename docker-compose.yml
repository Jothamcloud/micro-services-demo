version: '3.8'

networks:
  microservices-network:
    driver: bridge

services:
  frontend:
    build: 
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "8089:8080"
    networks:
      - microservices-network
    environment:
      - PORT=8080
      - PRODUCT_CATALOG_SERVICE_ADDR=productcatalogservice:3550
      - CURRENCY_SERVICE_ADDR=currencyservice:7000
      - CART_SERVICE_ADDR=cartservice:7070
      - RECOMMENDATION_SERVICE_ADDR=recommendationservice:8081
      - SHIPPING_SERVICE_ADDR=shippingservice:50051
      # - SHOPPING_ASSISTANT_SERVICE_ADDR=shoppingassistantservice:8080
      - SHOPPING_ASSISTANT_SERVICE_ADDR=disabled 
      - AD_SERVICE_ADDR=adservice:9555
      - CHECKOUT_SERVICE_ADDR=checkoutservice:5050 
      - GOTRACEBACK=single

  currencyservice:
    build: 
      context: ./src/currencyservice
    ports:
      - "7000:7000"
    networks:
      - microservices-network
    environment:
      - PORT=7000 
      - DISABLE_PROFILER=1
      - DISABLE_TRACING=1
      - DISABLE_DEBUGGING=1

  paymentservice:
    build:
      context: ./src/paymentservice
    ports:
      - "50052:50051"
    networks:
      - microservices-network
    environment:
      - PORT=50051  
      - DISABLE_PROFILER=1
      - DISABLE_TRACING=1
      - DISABLE_DEBUGGING=1

  # # Shopping Assistant Service
  # shoppingassistantservice:
  #   build:
  #     context: ./src/shoppingassistantservice
  #   ports:
  #     - "8083:8080"
  #   networks:
  #     - microservices-network
  #   environment:
  #     - PORT=8080
  #     - PYTHONUNBUFFERED=1
  #     - PROJECT_ID=demo-project  # Added missing PROJECT_ID
  #     - DISABLE_PROFILER=1
  #     - REGION=us-central1
  #     - DISABLE_TRACING=1
  #     - ALLOYDB_DATABASE_NAME=shoppingdb
  #     - ALLOYDB_CLUSTER_NAME=shopping-cluster
  #     - ALLOYDB_INSTANCE_NAME=shopping-instance
  #     - ALLOYDB_SECRET_NAME=microservice
  #     - ALLOYDB_TABLE_NAME=shopping-table

  emailservice:
    build:
      context: ./src/emailservice
    ports:
      - "8082:8080"
    networks:
      - microservices-network
    environment:
      - PYTHONUNBUFFERED=1
      - DISABLE_PROFILER=1  
      - DISABLE_TRACING=1

  checkoutservice:
    build:
      context: ./src/checkoutservice
    ports:
      - "5050:5050"
    networks:
      - microservices-network
    environment:
      - PORT=5050
      - PRODUCT_CATALOG_SERVICE_ADDR=productcatalogservice:3550
      - SHIPPING_SERVICE_ADDR=shippingservice:50051
      - PAYMENT_SERVICE_ADDR=paymentservice:50051
      - EMAIL_SERVICE_ADDR=emailservice:8080
      - CART_SERVICE_ADDR=cartservice:7070
      - CURRENCY_SERVICE_ADDR=currencyservice:7000
      # - GOTRACEBACK=single

  adservice:
    build: 
      context: ./src/adservice
    ports:
      - "9555:9555"
    networks:
      - microservices-network

  cartservice:
    build: 
      context: ./src/cartservice/src
    ports:
      - "7070:7070"
    networks:
      - microservices-network
    depends_on:
      - redis
    environment:
      # - DOTNET_EnableDiagnostics=0
      # - ASPNETCORE_HTTP_PORTS=7070
      - REDIS_URL=redis:6379
    user: "1000"

  productcatalogservice:
    build:
      context: ./src/productcatalogservice
    ports:
      - "3550:3550"
    networks:
      - microservices-network
    # environment:
    #   # - GOTRACEBACK=single

  recommendationservice:
    build:
      context: ./src/recommendationservice
    ports:
      - "8081:8080"
    networks:
      - microservices-network
    environment:
      - PORT=8080
      - PRODUCT_CATALOG_SERVICE_ADDR=productcatalogservice:3550
      # - PYTHONUNBUFFERED=1
      # - DISABLE_PROFILER=1
      # - DISABLE_TRACING=1
    depends_on:
      - productcatalogservice

  shippingservice:
    build:
      context: ./src/shippingservice
    ports:
      - "50051:50051"
    networks:
      - microservices-network
    environment:
      - APP_PORT=50051
      - GOTRACEBACK=single
  
  loadgenerator:
    build:
      context: ./src/loadgenerator
    networks:
      - microservices-network
    environment:
      - FRONTEND_ADDR=frontend:8089
      - USERS=10                     
      - GEVENT_SUPPORT=True         
    depends_on:
      - frontend


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    volumes:
      - redis_data:/data

volumes:
  redis_data: